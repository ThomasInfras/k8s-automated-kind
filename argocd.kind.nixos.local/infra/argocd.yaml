apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: argo-cd
  namespace: argocd-infra
operation:
  sync:
    syncStrategy:
      hook:
        force: true  
spec:
  project: default
  source:
    repoURL: 'https://argoproj.github.io/argo-helm'
    chart: argo-cd
    targetRevision: "7.5.0"  
    helm:
      values: |
        configs:
          secret:
            argocdServerAdminPassword: "$2a$10$7MobiW34X3tD5VH5grg3EePBFbH/6zqD0a6swYEr8/X.zdWtVTQ0i"
        global:
          domain: argocd.kind.nixos.local
        server:
          ingress:
            ingressClassName: nginx
            enabled: true
            annotations:
              gethomepage.dev/enabled: "true"
              gethomepage.dev/name: "ARGOCD"
              gethomepage.dev/pod-selector: "app.kubernetes.io/component=server"
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true" 
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
              nginx.ingress.kubernetes.io/secure-backends: "true"
              nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
              nginx.ingress.kubernetes.io/hsts: "false"
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: argocd  # Namespace où Argo CD sera déployé
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true      
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: github-applis
  namespace: argocd
spec:
  project: default

  source:
    repoURL: 'https://github.com/ThomasInfras/k8s-automated-kind'
    targetRevision: HEAD
    path: argocd.kind.nixos.local/applis

  destination:
    server: 'https://kubernetes.default.svc'
    namespace: argocd

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true         